import o from"../../../hammer.js";import{addListeners as e,computeDragRect as t,removeListeners as r}from"./handlers.js";import{startHammer as n,stopHammer as i}from"./hammer.js";import{pan as a,zoom as d,resetZoom as m,zoomScale as l,getZoomLevel as s}from"./core.js";import{panFunctions as f,zoomFunctions as p}from"./scale.types.js";import{getState as c,removeState as b}from"./state.js";export default{id:"zoom",version:"1.1.1",defaults:{pan:{enabled:!1,mode:"xy",threshold:10,modifierKey:null},zoom:{wheel:{enabled:!1,speed:.1,modifierKey:null},drag:{enabled:!1,modifierKey:null},pinch:{enabled:!1},mode:"xy"}},start:function(e,t,r){c(e).options=r,Object.prototype.hasOwnProperty.call(r.zoom,"enabled"),o&&n(e,r),e.pan=(o,t,r)=>a(e,o,t,r),e.zoom=(o,t)=>d(e,o,t),e.zoomScale=(o,t,r)=>l(e,o,t,r),e.resetZoom=o=>m(e,o),e.getZoomLevel=()=>s(e)},beforeEvent(o){const e=c(o);if(e.panning||e.dragging)return!1},beforeUpdate:function(o,t,r){c(o).options=r,e(o,r)},beforeDatasetsDraw:function(o,e,r){const{dragStart:n,dragEnd:i}=c(o);if(i){const{left:e,top:a,width:d,height:m}=t(o,r.zoom.mode,n,i),l=r.zoom.drag,s=o.ctx;s.save(),s.beginPath(),s.fillStyle=l.backgroundColor||"rgba(225,225,225,0.3)",s.fillRect(e,a,d,m),l.borderWidth>0&&(s.lineWidth=l.borderWidth,s.strokeStyle=l.borderColor||"rgba(225,225,225)",s.strokeRect(e,a,d,m)),s.restore()}},stop:function(e){r(e),o&&i(e),b(e)},panFunctions:f,zoomFunctions:p};