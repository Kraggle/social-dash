import{callback as n}from"../../src/helpers/index.js";import e from"../../../hammer.js";import{pan as t,zoom as o}from"./core.js";import{getState as a}from"./state.js";import{directionEnabled as c,getEnabledScalesByPoint as r,getModifierKey as i,keyNotPressed as s,keyPressed as p}from"./utils.js";function l(e,t){return function(o,a){const{pan:c,zoom:r={}}=t.options;if(!c||!c.enabled)return!1;const l=a&&a.srcEvent;return!l||(!(!t.panning&&"mouse"===a.pointerType&&(s(i(c),l)||p(i(r.drag),l)))||(n(c.onPanRejected,[{chart:e,event:a}]),!1))}}function m(n,e,t){if(e.scale){const{center:a,pointers:r}=t,i=1/e.scale*t.scale,s=t.target.getBoundingClientRect(),p=function(n,e){const t=Math.abs(n.clientX-e.clientX),o=Math.abs(n.clientY-e.clientY),a=t/o;let c,r;return a>.3&&a<1.7?c=r=!0:t>o?c=!0:r=!0,{x:c,y:r}}(r[0],r[1]),l=e.options.zoom.mode,m={x:p.x&&c(l,"x",n)?i:1,y:p.y&&c(l,"y",n)?i:1,focalPoint:{x:a.x-s.left,y:a.y-s.top}};o(n,m),e.scale=t.scale}}function d(n,e,o){const a=e.delta;a&&(e.panning=!0,t(n,{x:o.deltaX-a.x,y:o.deltaY-a.y},e.panScales),e.delta={x:o.deltaX,y:o.deltaY})}const u=new WeakMap;export function startHammer(t,o){const c=a(t),i=t.canvas,{pan:s,zoom:p}=o,f=new e.Manager(i);p&&p.pinch.enabled&&(f.add(new e.Pinch),f.on("pinchstart",(()=>function(n,e){e.options.zoom.pinch.enabled&&(e.scale=1)}(0,c))),f.on("pinch",(n=>m(t,c,n))),f.on("pinchend",(e=>function(e,t,o){t.scale&&(m(e,t,o),t.scale=null,n(t.options.zoom.onZoomComplete,[{chart:e}]))}(t,c,e)))),s&&s.enabled&&(f.add(new e.Pan({threshold:s.threshold,enable:l(t,c)})),f.on("panstart",(e=>function(e,t,o){const{enabled:a,overScaleMode:c,onPanStart:i,onPanRejected:s}=t.options.pan;if(!a)return;const p=o.target.getBoundingClientRect(),l={x:o.center.x-p.left,y:o.center.y-p.top};if(!1===n(i,[{chart:e,event:o,point:l}]))return n(s,[{chart:e,event:o}]);t.panScales=c&&r(c,l,e),t.delta={x:0,y:0},clearTimeout(t.panEndTimeout),d(e,t,o)}(t,c,e))),f.on("panmove",(n=>d(t,c,n))),f.on("panend",(()=>function(e,t){t.delta=null,t.panning&&(t.panEndTimeout=setTimeout((()=>t.panning=!1),500),n(t.options.pan.onPanComplete,[{chart:e}]))}(t,c)))),u.set(t,f)}export function stopHammer(n){const e=u.get(n);e&&(e.remove("pinchstart"),e.remove("pinch"),e.remove("pinchend"),e.remove("panstart"),e.remove("pan"),e.remove("panend"),e.destroy(),u.delete(n))}