import e from"../core/core.datasetController.js";import{isNullOrUndef as t}from"../helpers/index.js";import{_limitValue as a,isNumber as s}from"../helpers/helpers.math.js";import{_lookupByKey as i}from"../helpers/helpers.collection.js";export default class n extends e{initialize(){this.enableOptionSharing=!0,super.initialize()}update(e){const t=this,s=t._cachedMeta,{dataset:n,data:o=[],_dataset:r}=s,l=t.chart._animationsDisabled;let{start:d,count:m}=function(e,t,s){const n=t.length;let o=0,r=n;if(e._sorted){const{iScale:l,_parsed:d}=e,m=l.axis,{min:p,max:c,minDefined:h,maxDefined:x}=l.getUserBounds();h&&(o=a(Math.min(i(d,l.axis,p).lo,s?n:i(t,m,l.getPixelForValue(p)).lo),0,n-1)),r=x?a(Math.max(i(d,l.axis,c).hi+1,s?0:i(t,m,l.getPixelForValue(c)).hi+1),o,n)-o:n-o}return{start:o,count:r}}(s,o,l);t._drawStart=d,t._drawCount=m,function(e){const{xScale:t,yScale:a,_scaleRanges:s}=e,i={xmin:t.min,xmax:t.max,ymin:a.min,ymax:a.max};if(!s)return e._scaleRanges=i,!0;const n=s.xmin!==t.min||s.xmax!==t.max||s.ymin!==a.min||s.ymax!==a.max;return Object.assign(s,i),n}(s)&&(d=0,m=o.length),n._datasetIndex=t.index,n._decimated=!!r._decimated,n.points=o;const p=t.resolveDatasetElementOptions(e);t.options.showLine||(p.borderWidth=0),p.segment=t.options.segment,t.updateElement(n,void 0,{animated:!l,options:p},e),t.updateElements(o,d,m,e)}updateElements(e,a,i,n){const o=this,r="reset"===n,{iScale:l,vScale:d,_stacked:m}=o._cachedMeta,p=o.resolveDataElementOptions(a,n),c=o.getSharedOptions(p),h=o.includeOptions(n,c),x=l.axis,u=d.axis,g=o.options.spanGaps,_=s(g)?g:Number.POSITIVE_INFINITY,f=o.chart._animationsDisabled||r||"none"===n;let v=a>0&&o.getParsed(a-1);for(let s=a;s<a+i;++s){const a=e[s],i=o.getParsed(s),p=f?a:{},g=t(i[u]),E=p[x]=l.getPixelForValue(i[x],s),O=p[u]=r||g?d.getBasePixel():d.getPixelForValue(m?o.applyStack(d,i,m):i[u],s);p.skip=isNaN(E)||isNaN(O)||g,p.stop=s>0&&i[x]-v[x]>_,p.parsed=i,h&&(p.options=c||o.resolveDataElementOptions(s,a.active?"active":n)),f||o.updateElement(a,s,p,n),v=i}o.updateSharedOptions(c,n,p)}getMaxOverflow(){const e=this,t=e._cachedMeta,a=t.dataset,s=a.options&&a.options.borderWidth||0,i=t.data||[];if(!i.length)return s;const n=i[0].size(e.resolveDataElementOptions(0)),o=i[i.length-1].size(e.resolveDataElementOptions(i.length-1));return Math.max(s,n,o)/2}draw(){const e=this._cachedMeta;e.dataset.updateControlPoints(this.chart.chartArea,e.iScale.axis),super.draw()}}n.id="line",n.defaults={datasetElementType:"line",dataElementType:"point",showLine:!0,spanGaps:!1},n.overrides={scales:{_index_:{type:"category"},_value_:{type:"linear"}}};