import e from"../core/core.datasetController.js";import{_arrayUnique as t,isArray as a,isNullOrUndef as r,valueOrDefault as n,resolveObjectKey as s,sign as i,defined as o}from"../helpers/index.js";function c(e){const a=function(e){if(!e._cache.$bar){const a=e.getMatchingVisibleMetas("bar");let r=[];for(let t=0,n=a.length;t<n;t++)r=r.concat(a[t].controller.getAllParsedValues(e));e._cache.$bar=t(r.sort(((e,t)=>e-t)))}return e._cache.$bar}(e);let r,n,s,i,c=e._length;const l=()=>{32767!==s&&-32768!==s&&(o(i)&&(c=Math.min(c,Math.abs(s-i)||c)),i=s)};for(r=0,n=a.length;r<n;++r)s=e.getPixelForValue(a[r]),l();for(i=void 0,r=0,n=e.ticks.length;r<n;++r)s=e.getPixelForTick(r),l();return c}function l(e,t,r,n){return a(e)?function(e,t,a,r){const n=a.parse(e[0],r),s=a.parse(e[1],r),i=Math.min(n,s),o=Math.max(n,s);let c=i,l=o;Math.abs(i)>Math.abs(o)&&(c=o,l=i),t[a.axis]=l,t._custom={barStart:c,barEnd:l,start:n,end:s,min:i,max:o}}(e,t,r,n):t[r.axis]=r.parse(e,n),t}function d(e,t,a,r){const n=e.iScale,s=e.vScale,i=n.getLabels(),o=n===s,c=[];let d,u,h,g;for(d=a,u=a+r;d<u;++d)g=t[d],h={},h[n.axis]=o||n.parse(i[d],d),c.push(l(g,h,s,d));return c}function u(e){return e&&void 0!==e.barStart&&void 0!==e.barEnd}function h(e,t,a,r){let n=t.borderSkipped;const s={};if(!n)return void(e.borderSkipped=s);const{start:i,end:o,reverse:c,top:l,bottom:d}=function(e){let t,a,r,n,s;return e.horizontal?(t=e.base>e.x,a="left",r="right"):(t=e.base<e.y,a="bottom",r="top"),t?(n="end",s="start"):(n="start",s="end"),{start:a,end:r,reverse:t,top:n,bottom:s}}(e);"middle"===n&&a&&(e.enableBorderRadius=!0,(a._top||0)===r?n=l:(a._bottom||0)===r?n=d:(s[g(d,i,o,c)]=!0,n=l)),s[g(n,i,o,c)]=!0,e.borderSkipped=s}function g(e,t,a,r){var n,s,i;return r?(i=a,e=p(e=(n=e)===(s=t)?i:n===i?s:n,a,t)):e=p(e,t,a),e}function p(e,t,a){return"start"===e?t:"end"===e?a:e}export default class x extends e{parsePrimitiveData(e,t,a,r){return d(e,t,a,r)}parseArrayData(e,t,a,r){return d(e,t,a,r)}parseObjectData(e,t,a,r){const{iScale:n,vScale:i}=e,{xAxisKey:o="x",yAxisKey:c="y"}=this._parsing,d="x"===n.axis?o:c,u="x"===i.axis?o:c,h=[];let g,p,x,b;for(g=a,p=a+r;g<p;++g)b=t[g],x={},x[n.axis]=n.parse(s(b,d),g),h.push(l(s(b,u),x,i,g));return h}updateRangeFromParsed(e,t,a,r){super.updateRangeFromParsed(e,t,a,r);const n=a._custom;n&&t===this._cachedMeta.vScale&&(e.min=Math.min(e.min,n.min),e.max=Math.max(e.max,n.max))}getMaxOverflow(){return 0}getLabelAndValue(e){const t=this._cachedMeta,{iScale:a,vScale:r}=t,n=this.getParsed(e),s=n._custom,i=u(s)?"["+s.start+", "+s.end+"]":""+r.getLabelForValue(n[r.axis]);return{label:""+a.getLabelForValue(n[a.axis]),value:i}}initialize(){const e=this;e.enableOptionSharing=!0,super.initialize();e._cachedMeta.stack=e.getDataset().stack}update(e){const t=this._cachedMeta;this.updateElements(t.data,0,t.data.length,e)}updateElements(e,t,a,n){const s=this,i="reset"===n,{index:o,_cachedMeta:{vScale:c}}=s,l=c.getBasePixel(),d=c.isHorizontal(),g=s._getRuler(),p=s.resolveDataElementOptions(t,n),x=s.getSharedOptions(p),b=s.includeOptions(n,x);s.updateSharedOptions(x,n,p);for(let p=t;p<t+a;p++){const t=s.getParsed(p),a=i||r(t[c.axis])?{base:l,head:l}:s._calculateBarValuePixels(p),m=s._calculateBarIndexPixels(p,g),_=(t._stacks||{})[c.axis],f={horizontal:d,base:a.base,enableBorderRadius:!_||u(t._custom)||o===_._top||o===_._bottom,x:d?a.head:m.center,y:d?m.center:a.head,height:d?m.size:Math.abs(a.size),width:d?Math.abs(a.size):m.size};b&&(f.options=x||s.resolveDataElementOptions(p,e[p].active?"active":n)),h(f,f.options||e[p].options,_,o),s.updateElement(e[p],p,f,n)}}_getStacks(e,t){const a=this._cachedMeta.iScale,n=a.getMatchingVisibleMetas(this._type),s=a.options.stacked,i=n.length,o=[];let c,l;for(c=0;c<i;++c)if(l=n[c],l.controller.options.grouped){if(void 0!==t){const e=l.controller.getParsed(t)[l.controller._cachedMeta.vScale.axis];if(r(e)||isNaN(e))continue}if((!1===s||-1===o.indexOf(l.stack)||void 0===s&&void 0===l.stack)&&o.push(l.stack),l.index===e)break}return o.length||o.push(void 0),o}_getStackCount(e){return this._getStacks(void 0,e).length}_getStackIndex(e,t,a){const r=this._getStacks(e,a),n=void 0!==t?r.indexOf(t):-1;return-1===n?r.length-1:n}_getRuler(){const e=this,t=e.options,a=e._cachedMeta,r=a.iScale,n=[];let s,i;for(s=0,i=a.data.length;s<i;++s)n.push(r.getPixelForValue(e.getParsed(s)[r.axis],s));const o=t.barThickness;return{min:o||c(r),pixels:n,start:r._startPixel,end:r._endPixel,stackCount:e._getStackCount(),scale:r,grouped:t.grouped,ratio:o?1:t.categoryPercentage*t.barPercentage}}_calculateBarValuePixels(e){const t=this,{_cachedMeta:{vScale:a,_stacked:n},options:{base:s,minBarLength:o}}=t,c=s||0,l=t.getParsed(e),d=l._custom,h=u(d);let g,p,x=l[a.axis],b=0,m=n?t.applyStack(a,l,n):x;m!==x&&(b=m-x,m=x),h&&(x=d.barStart,m=d.barEnd-d.barStart,0!==x&&i(x)!==i(d.barEnd)&&(b=0),b+=x);const _=r(s)||h?b:s;let f=a.getPixelForValue(_);if(g=t.chart.getDataVisibility(e)?a.getPixelForValue(b+m):f,p=g-f,Math.abs(p)<o&&(p=function(e,t,a){return 0!==e?i(e):(t.isHorizontal()?1:-1)*(t.min>=a?1:-1)}(p,a,c)*o,x===c&&(f-=p/2),g=f+p),f===a.getPixelForValue(c)){const e=i(p)*a.getLineWidthForValue(c)/2;f+=e,p-=e}return{size:p,base:f,head:g,center:g+p/2}}_calculateBarIndexPixels(e,t){const a=this,s=t.scale,i=a.options,o=i.skipNull,c=n(i.maxBarThickness,1/0);let l,d;if(t.grouped){const n=o?a._getStackCount(e):t.stackCount,s="flex"===i.barThickness?function(e,t,a,r){const n=t.pixels,s=n[e];let i=e>0?n[e-1]:null,o=e<n.length-1?n[e+1]:null;const c=a.categoryPercentage;null===i&&(i=s-(null===o?t.end-t.start:o-s)),null===o&&(o=s+s-i);const l=s-(s-Math.min(i,o))/2*c;return{chunk:Math.abs(o-i)/2*c/r,ratio:a.barPercentage,start:l}}(e,t,i,n):function(e,t,a,n){const s=a.barThickness;let i,o;return r(s)?(i=t.min*a.categoryPercentage,o=a.barPercentage):(i=s*n,o=1),{chunk:i/n,ratio:o,start:t.pixels[e]-i/2}}(e,t,i,n),u=a._getStackIndex(a.index,a._cachedMeta.stack,o?e:void 0);l=s.start+s.chunk*u+s.chunk/2,d=Math.min(c,s.chunk*s.ratio)}else l=s.getPixelForValue(a.getParsed(e)[s.axis],e),d=Math.min(c,t.min*t.ratio);return{base:l-d/2,head:l+d/2,center:l,size:d}}draw(){const e=this,t=e._cachedMeta,a=t.vScale,r=t.data,n=r.length;let s=0;for(;s<n;++s)null!==e.getParsed(s)[a.axis]&&r[s].draw(e._ctx)}}x.id="bar",x.defaults={datasetElementType:!1,dataElementType:"bar",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:"number",properties:["x","y","base","width","height"]}}},x.overrides={scales:{_index_:{type:"category",offset:!0,grid:{offset:!0}},_value_:{type:"linear",beginAtZero:!0}}};