import t from"../core/core.element.js";import{_bezierInterpolation as e,_pointInLine as o,_steppedInterpolation as n}from"../helpers/helpers.interpolation.js";import{_computeSegments as s,_boundSegments as r}from"../helpers/helpers.segment.js";import{_steppedLineTo as i,_bezierCurveTo as p}from"../helpers/helpers.canvas.js";import{_updateBezierControlPoints as d}from"../helpers/helpers.curve.js";import{valueOrDefault as l}from"../helpers/index.js";function a(t,e,o=e){t.lineCap=l(o.borderCapStyle,e.borderCapStyle),t.setLineDash(l(o.borderDash,e.borderDash)),t.lineDashOffset=l(o.borderDashOffset,e.borderDashOffset),t.lineJoin=l(o.borderJoinStyle,e.borderJoinStyle),t.lineWidth=l(o.borderWidth,e.borderWidth),t.strokeStyle=l(o.borderColor,e.borderColor)}function h(t,e,o){t.lineTo(o.x,o.y)}function c(t,e,o={}){const n=t.length,{start:s=0,end:r=n-1}=o,{start:i,end:p}=e,d=Math.max(s,i),l=Math.min(r,p),a=s<i&&r<i||s>p&&r>p;return{count:n,start:d,loop:e.loop,ilen:l<d&&!a?n+l-d:l-d}}function u(t,e,o,n){const{points:s,options:r}=e,{count:d,start:l,loop:a,ilen:u}=c(s,o,n),f=function(t){return t.stepped?i:t.tension||"monotone"===t.cubicInterpolationMode?p:h}(r);let m,b,g,{move:_=!0,reverse:v}=n||{};for(m=0;m<=u;++m)b=s[(l+(v?u-m:m))%d],b.skip||(_?(t.moveTo(b.x,b.y),_=!1):f(t,g,b,v,r.stepped),g=b);return a&&(b=s[(l+(v?u:0))%d],f(t,g,b,v,r.stepped)),!!a}function f(t,e,o,n){const s=e.points,{count:r,start:i,ilen:p}=c(s,o,n),{move:d=!0,reverse:l}=n||{};let a,h,u,f,m,b,g=0,_=0;const v=t=>(i+(l?p-t:t))%r,y=()=>{f!==m&&(t.lineTo(g,m),t.lineTo(g,f),t.lineTo(g,b))};for(d&&(h=s[v(0)],t.moveTo(h.x,h.y)),a=0;a<=p;++a){if(h=s[v(a)],h.skip)continue;const e=h.x,o=h.y,n=0|e;n===u?(o<f?f=o:o>m&&(m=o),g=(_*g+e)/++_):(y(),t.lineTo(e,o),u=n,_=0,f=m=o),b=o}y()}function m(t){const e=t.options,o=e.borderDash&&e.borderDash.length;return!(t._decimated||t._loop||e.tension||"monotone"===e.cubicInterpolationMode||e.stepped||o)?f:u}const b="function"==typeof Path2D;function g(t,e,o,n){b&&1===e.segments.length?function(t,e,o,n){let s=e._path;s||(s=e._path=new Path2D,e.path(s,o,n)&&s.closePath()),a(t,e.options),t.stroke(s)}(t,e,o,n):function(t,e,o,n){const{segments:s,options:r}=e,i=m(e);for(const p of s)a(t,r,p.style),t.beginPath(),i(t,e,p,{start:o,end:o+n-1})&&t.closePath(),t.stroke()}(t,e,o,n)}export default class _ extends t{constructor(t){super(),this.animated=!0,this.options=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,this._datasetIndex=void 0,t&&Object.assign(this,t)}updateControlPoints(t,e){const o=this,n=o.options;if((n.tension||"monotone"===n.cubicInterpolationMode)&&!n.stepped&&!o._pointsUpdated){const s=n.spanGaps?o._loop:o._fullLoop;d(o._points,n,t,s,e),o._pointsUpdated=!0}}set points(t){const e=this;e._points=t,delete e._segments,delete e._path,e._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=s(this,this.options.segment))}first(){const t=this.segments,e=this.points;return t.length&&e[t[0].start]}last(){const t=this.segments,e=this.points,o=t.length;return o&&e[t[o-1].end]}interpolate(t,s){const i=this,p=i.options,d=t[s],l=i.points,a=r(i,{property:s,start:d,end:d});if(!a.length)return;const h=[],c=function(t){return t.stepped?n:t.tension||"monotone"===t.cubicInterpolationMode?e:o}(p);let u,f;for(u=0,f=a.length;u<f;++u){const{start:e,end:o}=a[u],n=l[e],r=l[o];if(n===r){h.push(n);continue}const i=c(n,r,Math.abs((d-n[s])/(r[s]-n[s])),p.stepped);i[s]=t[s],h.push(i)}return 1===h.length?h[0]:h}pathSegment(t,e,o){return m(this)(t,this,e,o)}path(t,e,o){const n=this,s=n.segments,r=m(n);let i=n._loop;e=e||0,o=o||n.points.length-e;for(const p of s)i&=r(t,n,p,{start:e,end:e+o-1});return!!i}draw(t,e,o,n){const s=this,r=s.options||{};(s.points||[]).length&&r.borderWidth&&(t.save(),g(t,s,o,n),t.restore(),s.animated&&(s._pointsUpdated=!1,s._path=void 0))}}_.id="line",_.defaults={borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:"default",fill:!1,spanGaps:!1,stepped:!1,tension:0},_.defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"},_.descriptors={_scriptable:!0,_indexable:t=>"borderDash"!==t&&"fill"!==t};