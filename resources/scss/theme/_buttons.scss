.btn {
    outline: none !important;

    &.btn-icon {
        position: relative;
        height: $icon-size-regular;
        width: $icon-size-regular;
        padding: 0;
        overflow: hidden;
        line-height: normal;

        &.btn-sm {
            height: $icon-size-sm;
            width: $icon-size-sm;
        }

        &.btn-lg {
            height: $icon-size-lg;
            width: $icon-size-lg;
        }

        &:not(.btn-footer) {
            i {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }
        }
    }
}

@each $color, $value in $theme-colors {
    .btn-#{$color} {
        @include button-variant($value, $value);

        @if (map-has-key($main-colors, $color)) {
            &.btn-gradient {
                @include button-gradient(
                    $value,
                    map-get($main-states, '#{$color}-states')
                );
            }
        }
    }
}

@each $color, $value in $theme-colors {
    .btn-outline-#{$color} {
        @include button-outline-variant($value);
    }
}

.btn-group {
    .btn.active {
        box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.4);
        transform: translateY(-1px);
    }

    label.btn.active {
        transform: translateY(0);
    }
}

.btn-link {
    font-weight: $btn-font-weight;
    text-decoration: none;
    border-color: transparent;
}

.btn {
    @each $color, $value in $brand-colors {
        &.btn-#{$color} {
            @include social-buttons-color(
                $value,
                map-get($brand-states, '#{$color}-states')
            );
        }
    }

    &:disabled,
    &[disabled],
    &.disabled {
        @include opacity(0.5);

        pointer-events: none;
    }

    &.btn-double-padding {
        $double-padding: $btn-padding-x * 2;
        padding-left: $double-padding;
        padding-right: $double-padding;

        &.btn-sm {
            $double-padding-sm: $btn-padding-x-sm * 2;
            padding-left: $double-padding-sm;
            padding-right: $double-padding-sm;
        }

        &.btn-lg {
            $double-padding-lg: $btn-padding-x-lg * 2;
            padding-left: $double-padding-lg;
            padding-right: $double-padding-lg;
        }
    }

    &:not([disabled]) {
        [class*='spinner-'] {
            display: none;
        }
    }

    &[disabled] {
        .btn-text {
            display: none;
        }
    }
}
